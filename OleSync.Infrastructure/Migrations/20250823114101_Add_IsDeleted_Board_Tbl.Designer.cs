// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OleSync.Infrastructure.Persistence.Context;

#nullable disable

namespace OleSync.Infrastructure.Migrations
{
    [DbContext(typeof(OleSyncContext))]
    [Migration("20250823114101_Add_IsDeleted_Board_Tbl")]
    partial class Add_IsDeleted_Board_Tbl
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BoardType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Purpose")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Boards", (string)null);
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.Board", b =>
                {
                    b.OwnsOne("OleSync.Domain.Boards.Core.ValueObjects.AuditInfo", "Audit", b1 =>
                        {
                            b1.Property<int>("BoardId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("CreatedAt");

                            b1.Property<long>("CreatedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("CreatedBy");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("DeletedAt");

                            b1.Property<long?>("DeletedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("DeletedBy");

                            b1.Property<bool>("IsDeleted")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bit")
                                .HasDefaultValue(false);

                            b1.Property<DateTime?>("ModifiedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("ModifiedAt");

                            b1.Property<long?>("ModifiedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("ModifiedBy");

                            b1.HasKey("BoardId");

                            b1.ToTable("Boards");

                            b1.WithOwner()
                                .HasForeignKey("BoardId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
