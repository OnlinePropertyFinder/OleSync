// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OleSync.Infrastructure.Persistence.Context;

#nullable disable

namespace OleSync.Infrastructure.Migrations
{
    [DbContext(typeof(OleSyncContext))]
    [Migration("20250904101626_Remove_UnusedVoting_Columns")]
    partial class Remove_UnusedVoting_Columns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoardCommittees", b =>
                {
                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<int>("CommitteeId")
                        .HasColumnType("int");

                    b.HasKey("BoardId", "CommitteeId");

                    b.HasIndex("CommitteeId");

                    b.ToTable("BoardCommittees", (string)null);
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BoardType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Purpose")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Boards", (string)null);
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.BoardMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("MemberType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GuestId");

                    b.HasIndex("BoardId", "EmployeeId", "GuestId");

                    b.ToTable("BoardMembers", (string)null);
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.Committee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommitteeType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DocumentUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsLinkedToBoard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("QuorumPercentage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("Committees", (string)null);
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.CommitteeMeeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CommitteeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("MeetingType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("CommitteeId");

                    b.ToTable("CommitteeMeetings", (string)null);
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.CommitteeMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommitteeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("MemberType")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GuestId");

                    b.HasIndex("CommitteeId", "EmployeeId", "GuestId");

                    b.ToTable("CommitteeMembers", (string)null);
                });

            modelBuilder.Entity("OleSync.Domain.People.Core.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MemberType")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("OleSync.Domain.People.Core.Entities.Guest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MemberType")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Guests", (string)null);
                });

            modelBuilder.Entity("BoardCommittees", b =>
                {
                    b.HasOne("OleSync.Domain.Boards.Core.Entities.Board", null)
                        .WithMany()
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OleSync.Domain.Boards.Core.Entities.Committee", null)
                        .WithMany()
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.Board", b =>
                {
                    b.OwnsOne("OleSync.Domain.Boards.Core.ValueObjects.AuditInfo", "Audit", b1 =>
                        {
                            b1.Property<int>("BoardId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("CreatedAt");

                            b1.Property<long>("CreatedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("CreatedBy");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("DeletedAt");

                            b1.Property<long?>("DeletedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("DeletedBy");

                            b1.Property<bool>("IsDeleted")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bit")
                                .HasDefaultValue(false)
                                .HasColumnName("IsDeleted");

                            b1.Property<DateTime?>("ModifiedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("ModifiedAt");

                            b1.Property<long?>("ModifiedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("ModifiedBy");

                            b1.HasKey("BoardId");

                            b1.ToTable("Boards");

                            b1.WithOwner()
                                .HasForeignKey("BoardId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.BoardMember", b =>
                {
                    b.HasOne("OleSync.Domain.Boards.Core.Entities.Board", "Board")
                        .WithMany("Members")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OleSync.Domain.People.Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OleSync.Domain.People.Core.Entities.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("OleSync.Domain.Boards.Core.ValueObjects.AuditInfo", "Audit", b1 =>
                        {
                            b1.Property<int>("BoardMemberId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("CreatedAt");

                            b1.Property<long>("CreatedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("CreatedBy");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("DeletedAt");

                            b1.Property<long?>("DeletedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("DeletedBy");

                            b1.Property<bool>("IsDeleted")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bit")
                                .HasDefaultValue(false)
                                .HasColumnName("IsDeleted");

                            b1.Property<DateTime?>("ModifiedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("ModifiedAt");

                            b1.Property<long?>("ModifiedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("ModifiedBy");

                            b1.HasKey("BoardMemberId");

                            b1.ToTable("BoardMembers");

                            b1.WithOwner()
                                .HasForeignKey("BoardMemberId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Board");

                    b.Navigation("Employee");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.Committee", b =>
                {
                    b.OwnsOne("OleSync.Domain.Boards.Core.ValueObjects.AuditInfo", "Audit", b1 =>
                        {
                            b1.Property<int>("CommitteeId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("CreatedAt");

                            b1.Property<long>("CreatedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("CreatedBy");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("DeletedAt");

                            b1.Property<long?>("DeletedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("DeletedBy");

                            b1.Property<bool>("IsDeleted")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bit")
                                .HasDefaultValue(false)
                                .HasColumnName("IsDeleted");

                            b1.Property<DateTime?>("ModifiedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("ModifiedAt");

                            b1.Property<long?>("ModifiedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("ModifiedBy");

                            b1.HasKey("CommitteeId");

                            b1.ToTable("Committees");

                            b1.WithOwner()
                                .HasForeignKey("CommitteeId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.CommitteeMeeting", b =>
                {
                    b.HasOne("OleSync.Domain.Boards.Core.Entities.Committee", "Committee")
                        .WithMany("Meetings")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Committee");
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.CommitteeMember", b =>
                {
                    b.HasOne("OleSync.Domain.Boards.Core.Entities.Committee", "Committee")
                        .WithMany("Members")
                        .HasForeignKey("CommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OleSync.Domain.People.Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OleSync.Domain.People.Core.Entities.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("OleSync.Domain.Boards.Core.ValueObjects.AuditInfo", "Audit", b1 =>
                        {
                            b1.Property<int>("CommitteeMemberId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("CreatedAt");

                            b1.Property<long>("CreatedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("CreatedBy");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("DeletedAt");

                            b1.Property<long?>("DeletedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("DeletedBy");

                            b1.Property<bool>("IsDeleted")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bit")
                                .HasDefaultValue(false)
                                .HasColumnName("IsDeleted");

                            b1.Property<DateTime?>("ModifiedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("ModifiedAt");

                            b1.Property<long?>("ModifiedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("ModifiedBy");

                            b1.HasKey("CommitteeMemberId");

                            b1.ToTable("CommitteeMembers");

                            b1.WithOwner()
                                .HasForeignKey("CommitteeMemberId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Committee");

                    b.Navigation("Employee");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("OleSync.Domain.People.Core.Entities.Employee", b =>
                {
                    b.OwnsOne("OleSync.Domain.Boards.Core.ValueObjects.AuditInfo", "Audit", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("CreatedAt");

                            b1.Property<long>("CreatedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("CreatedBy");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("DeletedAt");

                            b1.Property<long?>("DeletedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("DeletedBy");

                            b1.Property<bool>("IsDeleted")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bit")
                                .HasDefaultValue(false)
                                .HasColumnName("IsDeleted");

                            b1.Property<DateTime?>("ModifiedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("ModifiedAt");

                            b1.Property<long?>("ModifiedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("ModifiedBy");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employees");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("OleSync.Domain.People.Core.Entities.Guest", b =>
                {
                    b.OwnsOne("OleSync.Domain.Boards.Core.ValueObjects.AuditInfo", "Audit", b1 =>
                        {
                            b1.Property<int>("GuestId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("CreatedAt");

                            b1.Property<long>("CreatedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("CreatedBy");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("DeletedAt");

                            b1.Property<long?>("DeletedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("DeletedBy");

                            b1.Property<bool>("IsDeleted")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bit")
                                .HasDefaultValue(false)
                                .HasColumnName("IsDeleted");

                            b1.Property<DateTime?>("ModifiedAt")
                                .HasColumnType("datetime")
                                .HasColumnName("ModifiedAt");

                            b1.Property<long?>("ModifiedBy")
                                .HasColumnType("bigint")
                                .HasColumnName("ModifiedBy");

                            b1.HasKey("GuestId");

                            b1.ToTable("Guests");

                            b1.WithOwner()
                                .HasForeignKey("GuestId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.Board", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("OleSync.Domain.Boards.Core.Entities.Committee", b =>
                {
                    b.Navigation("Meetings");

                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
